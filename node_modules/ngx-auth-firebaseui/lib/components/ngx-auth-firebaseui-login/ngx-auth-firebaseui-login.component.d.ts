import { EventEmitter, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AuthProcessService, AuthProvider } from '../../services';
import { Subscription } from 'rxjs';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { ThemePalette } from '@angular/material/core';
import * as ɵngcc0 from '@angular/core';
export declare class NgxAuthFirebaseuiLoginComponent implements OnInit {
    private platformId;
    authProcess: AuthProcessService;
    private formBuilder;
    logoUrl: string;
    providers: string[] | string;
    appearance: MatFormFieldAppearance;
    registrationEnabled: boolean;
    resetPasswordEnabled: boolean;
    messageOnAuthSuccess: string;
    messageOnAuthError: string;
    titleText: string;
    rememberMeText: string;
    loginButtonText: string;
    orLabelText: string;
    forgotPasswordText: string;
    dontHaveAnAccountText: string;
    createAccountButtonText: string;
    emailText: string;
    emailErrorRequiredText: string;
    emailErrorPatternText: string;
    passwordText: string;
    passwordErrorRequiredText: string;
    onSuccess: any;
    onError: any;
    onCreateAccountRequested: EventEmitter<void>;
    onResetPasswordRequested: EventEmitter<void>;
    loginForm: FormGroup;
    authProviders: typeof AuthProvider;
    onErrorSubscription: Subscription;
    authenticationError: boolean;
    constructor(platformId: Object, authProcess: AuthProcessService, formBuilder: FormBuilder);
    get color(): string | ThemePalette;
    get colorAccent(): string | ThemePalette;
    ngOnInit(): void;
    updateAuthSnackbarMessages(): void;
    login(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxAuthFirebaseuiLoginComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxAuthFirebaseuiLoginComponent, "ngx-auth-firebaseui-login", never, {
    "providers": "providers";
    "registrationEnabled": "registrationEnabled";
    "resetPasswordEnabled": "resetPasswordEnabled";
    "titleText": "titleText";
    "rememberMeText": "rememberMeText";
    "loginButtonText": "loginButtonText";
    "orLabelText": "orLabelText";
    "forgotPasswordText": "forgotPasswordText";
    "dontHaveAnAccountText": "dontHaveAnAccountText";
    "createAccountButtonText": "createAccountButtonText";
    "emailText": "emailText";
    "emailErrorRequiredText": "emailErrorRequiredText";
    "emailErrorPatternText": "emailErrorPatternText";
    "passwordText": "passwordText";
    "passwordErrorRequiredText": "passwordErrorRequiredText";
    "logoUrl": "logoUrl";
    "appearance": "appearance";
    "messageOnAuthSuccess": "messageOnAuthSuccess";
    "messageOnAuthError": "messageOnAuthError";
}, {
    "onCreateAccountRequested": "onCreateAccountRequested";
    "onResetPasswordRequested": "onResetPasswordRequested";
    "onSuccess": "onSuccess";
    "onError": "onError";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWF1dGgtZmlyZWJhc2V1aS1sb2dpbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmd4LWF1dGgtZmlyZWJhc2V1aS1sb2dpbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUNBOyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQXV0aFByb2Nlc3NTZXJ2aWNlLCBBdXRoUHJvdmlkZXIgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcyc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE1hdEZvcm1GaWVsZEFwcGVhcmFuY2UgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9mb3JtLWZpZWxkJztcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4QXV0aEZpcmViYXNldWlMb2dpbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIGF1dGhQcm9jZXNzOiBBdXRoUHJvY2Vzc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjtcbiAgICBsb2dvVXJsOiBzdHJpbmc7XG4gICAgcHJvdmlkZXJzOiBzdHJpbmdbXSB8IHN0cmluZztcbiAgICBhcHBlYXJhbmNlOiBNYXRGb3JtRmllbGRBcHBlYXJhbmNlO1xuICAgIHJlZ2lzdHJhdGlvbkVuYWJsZWQ6IGJvb2xlYW47XG4gICAgcmVzZXRQYXNzd29yZEVuYWJsZWQ6IGJvb2xlYW47XG4gICAgbWVzc2FnZU9uQXV0aFN1Y2Nlc3M6IHN0cmluZztcbiAgICBtZXNzYWdlT25BdXRoRXJyb3I6IHN0cmluZztcbiAgICB0aXRsZVRleHQ6IHN0cmluZztcbiAgICByZW1lbWJlck1lVGV4dDogc3RyaW5nO1xuICAgIGxvZ2luQnV0dG9uVGV4dDogc3RyaW5nO1xuICAgIG9yTGFiZWxUZXh0OiBzdHJpbmc7XG4gICAgZm9yZ290UGFzc3dvcmRUZXh0OiBzdHJpbmc7XG4gICAgZG9udEhhdmVBbkFjY291bnRUZXh0OiBzdHJpbmc7XG4gICAgY3JlYXRlQWNjb3VudEJ1dHRvblRleHQ6IHN0cmluZztcbiAgICBlbWFpbFRleHQ6IHN0cmluZztcbiAgICBlbWFpbEVycm9yUmVxdWlyZWRUZXh0OiBzdHJpbmc7XG4gICAgZW1haWxFcnJvclBhdHRlcm5UZXh0OiBzdHJpbmc7XG4gICAgcGFzc3dvcmRUZXh0OiBzdHJpbmc7XG4gICAgcGFzc3dvcmRFcnJvclJlcXVpcmVkVGV4dDogc3RyaW5nO1xuICAgIG9uU3VjY2VzczogYW55O1xuICAgIG9uRXJyb3I6IGFueTtcbiAgICBvbkNyZWF0ZUFjY291bnRSZXF1ZXN0ZWQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBvblJlc2V0UGFzc3dvcmRSZXF1ZXN0ZWQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBsb2dpbkZvcm06IEZvcm1Hcm91cDtcbiAgICBhdXRoUHJvdmlkZXJzOiB0eXBlb2YgQXV0aFByb3ZpZGVyO1xuICAgIG9uRXJyb3JTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBhdXRoZW50aWNhdGlvbkVycm9yOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKHBsYXRmb3JtSWQ6IE9iamVjdCwgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZSwgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyKTtcbiAgICBnZXQgY29sb3IoKTogc3RyaW5nIHwgVGhlbWVQYWxldHRlO1xuICAgIGdldCBjb2xvckFjY2VudCgpOiBzdHJpbmcgfCBUaGVtZVBhbGV0dGU7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICB1cGRhdGVBdXRoU25hY2tiYXJNZXNzYWdlcygpOiB2b2lkO1xuICAgIGxvZ2luKCk6IFByb21pc2U8dm9pZD47XG59XG4iXX0=