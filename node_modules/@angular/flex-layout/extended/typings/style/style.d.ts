/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { DoCheck, ElementRef, KeyValueDiffers, Renderer2 } from '@angular/core';
import { NgStyle } from '@angular/common';
import { DomSanitizer } from '@angular/platform-browser';
import { BaseDirective2, StyleUtils, MediaMarshaller } from '@angular/flex-layout/core';
import { NgStyleType, NgStyleMap } from './style-transforms';
import * as ɵngcc0 from '@angular/core';
export declare class StyleDirective extends BaseDirective2 implements DoCheck {
    protected sanitizer: DomSanitizer;
    private readonly ngStyleInstance;
    protected DIRECTIVE_KEY: string;
    protected fallbackStyles: NgStyleMap;
    protected isServer: boolean;
    constructor(elementRef: ElementRef, styler: StyleUtils, marshal: MediaMarshaller, sanitizer: DomSanitizer, differs: KeyValueDiffers, renderer2: Renderer2, ngStyleInstance: NgStyle, serverLoaded: boolean, platformId: Object);
    /** Add generated styles */
    protected updateWithValue(value: any): void;
    /** Remove generated styles */
    protected clearStyles(): void;
    /**
     * Convert raw strings to ngStyleMap; which is required by ngStyle
     * NOTE: Raw string key-value pairs MUST be delimited by `;`
     *       Comma-delimiters are not supported due to complexities of
     *       possible style values such as `rgba(x,x,x,x)` and others
     */
    protected buildStyleMap(styles: NgStyleType): NgStyleMap;
    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StyleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StyleDirective, never, never, {}, {}, never>;
}
/**
 * Directive to add responsive support for ngStyle.
 *
 */
export declare class DefaultStyleDirective extends StyleDirective implements DoCheck {
    protected inputs: string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultStyleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DefaultStyleDirective, "  [ngStyle],  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]", never, {
    "ngStyle": "ngStyle";
    "ngStyle.xs": "ngStyle.xs";
    "ngStyle.sm": "ngStyle.sm";
    "ngStyle.md": "ngStyle.md";
    "ngStyle.lg": "ngStyle.lg";
    "ngStyle.xl": "ngStyle.xl";
    "ngStyle.lt-sm": "ngStyle.lt-sm";
    "ngStyle.lt-md": "ngStyle.lt-md";
    "ngStyle.lt-lg": "ngStyle.lt-lg";
    "ngStyle.lt-xl": "ngStyle.lt-xl";
    "ngStyle.gt-xs": "ngStyle.gt-xs";
    "ngStyle.gt-sm": "ngStyle.gt-sm";
    "ngStyle.gt-md": "ngStyle.gt-md";
    "ngStyle.gt-lg": "ngStyle.gt-lg";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuZC50cyIsInNvdXJjZXMiOlsic3R5bGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPQTsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IERvQ2hlY2ssIEVsZW1lbnRSZWYsIEtleVZhbHVlRGlmZmVycywgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ1N0eWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZTIsIFN0eWxlVXRpbHMsIE1lZGlhTWFyc2hhbGxlciB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0L2NvcmUnO1xuaW1wb3J0IHsgTmdTdHlsZVR5cGUsIE5nU3R5bGVNYXAgfSBmcm9tICcuL3N0eWxlLXRyYW5zZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3R5bGVEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlRGlyZWN0aXZlMiBpbXBsZW1lbnRzIERvQ2hlY2sge1xuICAgIHByb3RlY3RlZCBzYW5pdGl6ZXI6IERvbVNhbml0aXplcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG5nU3R5bGVJbnN0YW5jZTtcbiAgICBwcm90ZWN0ZWQgRElSRUNUSVZFX0tFWTogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBmYWxsYmFja1N0eWxlczogTmdTdHlsZU1hcDtcbiAgICBwcm90ZWN0ZWQgaXNTZXJ2ZXI6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgc3R5bGVyOiBTdHlsZVV0aWxzLCBtYXJzaGFsOiBNZWRpYU1hcnNoYWxsZXIsIHNhbml0aXplcjogRG9tU2FuaXRpemVyLCBkaWZmZXJzOiBLZXlWYWx1ZURpZmZlcnMsIHJlbmRlcmVyMjogUmVuZGVyZXIyLCBuZ1N0eWxlSW5zdGFuY2U6IE5nU3R5bGUsIHNlcnZlckxvYWRlZDogYm9vbGVhbiwgcGxhdGZvcm1JZDogT2JqZWN0KTtcbiAgICAvKiogQWRkIGdlbmVyYXRlZCBzdHlsZXMgKi9cbiAgICBwcm90ZWN0ZWQgdXBkYXRlV2l0aFZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIC8qKiBSZW1vdmUgZ2VuZXJhdGVkIHN0eWxlcyAqL1xuICAgIHByb3RlY3RlZCBjbGVhclN0eWxlcygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIENvbnZlcnQgcmF3IHN0cmluZ3MgdG8gbmdTdHlsZU1hcDsgd2hpY2ggaXMgcmVxdWlyZWQgYnkgbmdTdHlsZVxuICAgICAqIE5PVEU6IFJhdyBzdHJpbmcga2V5LXZhbHVlIHBhaXJzIE1VU1QgYmUgZGVsaW1pdGVkIGJ5IGA7YFxuICAgICAqICAgICAgIENvbW1hLWRlbGltaXRlcnMgYXJlIG5vdCBzdXBwb3J0ZWQgZHVlIHRvIGNvbXBsZXhpdGllcyBvZlxuICAgICAqICAgICAgIHBvc3NpYmxlIHN0eWxlIHZhbHVlcyBzdWNoIGFzIGByZ2JhKHgseCx4LHgpYCBhbmQgb3RoZXJzXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGJ1aWxkU3R5bGVNYXAoc3R5bGVzOiBOZ1N0eWxlVHlwZSk6IE5nU3R5bGVNYXA7XG4gICAgLyoqIEZvciBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5vblB1c2ggYW5kIG5nT25DaGFuZ2VzKCkgdXBkYXRlcyAqL1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xufVxuLyoqXG4gKiBEaXJlY3RpdmUgdG8gYWRkIHJlc3BvbnNpdmUgc3VwcG9ydCBmb3IgbmdTdHlsZS5cbiAqXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERlZmF1bHRTdHlsZURpcmVjdGl2ZSBleHRlbmRzIFN0eWxlRGlyZWN0aXZlIGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgcHJvdGVjdGVkIGlucHV0czogc3RyaW5nW107XG59XG4iXX0=